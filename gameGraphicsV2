import pygame
import random
import time
from gamefunctions import new_random_monster, print_shop_menu


pygame.init()

GRID_SIZE = 10
CELL_SIZE = 32
WINDOW_SIZE = GRID_SIZE * CELL_SIZE
SCREEN_WIDTH = SCREEN_HEIGHT = 320
WHITE = (255, 255, 255)
GREEN = (0, 255, 0)
RED = (255, 0, 0)
BLACK = (0, 0, 0)
FONT_COLOR = (0, 0, 0)  # Color for text (black)

# Screen setup
screen = pygame.display.set_mode((SCREEN_WIDTH, SCREEN_HEIGHT))
pygame.display.set_caption("Game Grid")

# Font setup
font = pygame.font.SysFont("Times New Roman", 12)

# Player class to encapsulate all player data
class Player:
    def __init__(self):
        self.health = 100
        self.gold = 10
        self.equipped_items = []


# Initialize player
player = Player()

#Set player position at the 0,0 left corner
player_pos = pygame.Rect(0, 0, CELL_SIZE, CELL_SIZE)

# Shop and Random Encounter Positions (randomly placed)
shop_pos = pygame.Rect(random.randint(0, GRID_SIZE-1) * CELL_SIZE, random.randint(0, GRID_SIZE-1) * CELL_SIZE, CELL_SIZE, CELL_SIZE)
encounter_pos = pygame.Rect(random.randint(0, GRID_SIZE-1) * CELL_SIZE, random.randint(0, GRID_SIZE-1) * CELL_SIZE, CELL_SIZE, CELL_SIZE)

def drawGrid():
    """
    Draws the 10x10 grid on the screen. Each cell is 32x32 pixels.
    This grid serves as the background to show the player's movement on the grid.

    Returns: None
    """
    for x in range(0, WINDOW_SIZE, CELL_SIZE):
        for y in range(0, WINDOW_SIZE, CELL_SIZE):
            pygame.draw.rect(screen, BLACK, pygame.Rect(x, y, CELL_SIZE, CELL_SIZE), 1)

def drawGameElements():
    """
    Draws the player (blue square), shop (green circle), and random encounter (red circle)
    on the screen at their respective positions.

    Returns: None
    """
    # Draw player (blue square)
    pygame.draw.rect(screen, (0, 0, 255), player_pos)

    # Draw shop (green circle)
    pygame.draw.circle(screen, GREEN, shop_pos.center, CELL_SIZE // 2)

    # Draw random encounter (red circle)
    pygame.draw.circle(screen, RED, encounter_pos.center, CELL_SIZE // 2)

def draw_text(text, position):
    """
    Draws the provided text on the screen at the given position.
    
    Args:
        text (str): The text to be drawn on the screen.
        position (tuple): The (x, y) position where the text will be displayed.
        
    Returns:
        None
    """
    text_surface = font.render(text, True, FONT_COLOR)
    screen.blit(text_surface, position)

def itemShop():
    """
    Function to handle when the player is on the shop circle, able to take input to buy items
    """
    print("You have entered the shop.")

    shop_inventory = [
        {'name': 'Swashbuckler Sword', 'type': 'weapon', 'price': 5.99},
        {'name': 'Milkshake', 'type': 'healthBoost', 'price': 3.50}
    ]
    # Display available items in the shop
    for idx, item in enumerate(shop_inventory, 1):
        print(f"Press '{idx}' to buy {item['name']} for {item['price']} gold.")
    print("Press '3' to exit the shop.")

    validInput = False
    lastPosition = player_pos.copy()

    while not validInput:
        userInput = input("Choose and option 1, 2, or 3: ").strip()
        
        if userInput == '1' and len(shop_inventory) >= 1:
            item = shop_inventory[0]
            if player.gold >= item['price']:
                player.gold -= item['price']
                player.equipped_items.append(item['name'])
                print("You purchased {item['name']}!")
                shop_inventory.pop(0)  # Remove item from shop inventory
            else:
                print("Not enough gold to purchase {item['name']}.")
            validInput = True
        elif userInput == '2' and len(shop_inventory) >= 1:
            item = shop_inventory[1]
            if player.gold >= item['price']:
                player.gold -= item['price']
                player.equipped_items.append(item['name'])
                print("You purchased {item['name']}!")
                shop_inventory.pop(1)
            else:
                print("Not enough gold to purchase {item['name']}.")
            validInput = True
        elif userInput == '3':
            print("Exiting shop.")
            player_pos.x = lastPosition.x
            player_pos.y = lastPosition.y
            valid_input = True
        else:
            print("Invalid choice. Please enter '1', '2', or '3'.")


#Game Loop code
running = True
while running: 
    screen.fill(WHITE) #Set background screen as white

    drawGrid() # Draw grid

    drawGameElements() # Draw player, shop, and random monster encounter
    
    # Code handling keyboard interaction with player movement
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
        if event.type == pygame.KEYDOWN:
            if event.key == pygame.K_q:
                running = False
            elif event.key == pygame.K_UP and player_pos.top > 0:
                player_pos.move_ip(0, -CELL_SIZE)  # Move up
            elif event.key == pygame.K_DOWN and player_pos.bottom < WINDOW_SIZE:
                player_pos.move_ip(0, CELL_SIZE)  # Move down
            elif event.key == pygame.K_LEFT and player_pos.left > 0:
                player_pos.move_ip(-CELL_SIZE, 0)  # Move left
            elif event.key == pygame.K_RIGHT and player_pos.right < WINDOW_SIZE:
                player_pos.move_ip(CELL_SIZE, 0)  # Move right
        
    if player_pos.colliderect(shop_pos):
        itemShop()
        player_pos

    draw_text(f"Health: {player.health}", (10, 40))
    draw_text(f"Gold: {player.gold:.2f}", (10, 70))
    draw_text(f"Inventory: {', '.join(player.equipped_items) if player.equipped_items else 'None'}", (10, 100))

    pygame.display.flip() # Update display

    pygame.time.Clock().tick(10) # Frame rate (FPS)


pygame.quit() # Guit game failsafe 