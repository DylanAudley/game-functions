from gamefunctions import new_random_monster

itemInventory = [
                 {'name': 'swashbuckler sword', 'type': 'weapon', 'minDurability': 1, 'currentDurability': 25},
                 {'name': 'round shield', 'type': 'shield', 'minDurability': 1, 'currentDurability': 50},
                 {'name': 'milkshake', 'type': 'healthBoost'} 
                ]

def main():
    """
    Main function to start the game. It generates a random monster,
    displays its information, and enters a loop where the player can
    interact with the monster by fighting, sleeping to restore health,
    or quitting the game.
    """
    
    # Generate a random monster
    monster = new_random_monster()
    print(f'A wild {monster["name"]} appears!')
    print(f'Description: {monster["description"]}')
    print(f'Health: {monster["health"]}')
    print(f'Power: {monster["power"]}')
    print(f'Money: {monster["money"]}')

    playerHealth = 100  # Set players base health
    playerGold = 10  # Set player's gold 
    equippiedItems = [] # Set list to keep track of items

    while True:
        displayMenu(monster, playerHealth, playerGold, equippiedItems)

        choice = input('Enter your choice (1-4): ')
        if choice == '1': 
            playerHealth = fightMonster(monster, playerHealth)
            if playerHealth <= 0:  # Check if the player is dead after the fight
                print('Game Over!')
                break 

        elif choice == '2':
            if playerGold >= 5:  # Check if the player has enough money
                playerHealth += 15  # Restore 15 HP
                playerGold -= 5  # Deduct 5 gold
                print(f'You slept and restored 15 HP! Current HP: {playerHealth}. Current Gold: {playerGold}.')
            else:
                print('Not enough gold to sleep!')

        elif choice == '3':
            equipItems(itemInventory, equippiedItems)

        elif choice == '4':
            print('You chose to quit. Goodbye!!')
            break

        else:
            print('Invalid choice. Please choose (1-3).')

def displayMenu(monster, playerHealth, playerGold, equippiedItems):
    """
    Displays the current status of the player and the available options.

    Parameters:
        monster (dict): The current monster with its attributes.
        playerHealth (int): The player's current health.
        playerGold (int): The player's current gold.

    Returns:
        None
    """
    print(f'Current HP: {playerHealth}, Current Gold: {playerGold}')
    print('Equipped items:', ', '.join(equippiedItems) if equippiedItems else 'None')
    print('What would you like to do?')
    print("1) Fight Monster")
    print("2) Sleep (Restore HP for 5 Gold)")
    print("3) Choose an item from inventory to equip")
    print("4) Quit")

def fightMonster(monster, playerHealth):
    """
    Simulates a fight between the player and the monster.

    Parameters:
        monster (dict): The current monster with its attributes.
        playerHealth (int): The player's current health.

    Returns:
        int: The updated player's health after the fight.
    """
    while monster["health"] > 0 and playerHealth > 0:
        print(f'You attack the {monster["name"]}!')
        monster["health"] -= 10  # Deduct 10 health from monster
        print(f'The {monster["name"]} has {monster["health"]} left!')
    
        if monster["health"] <= 0:
            print(f"You defeated the {monster['name']}!")
            break
        
        playerHealth -= monster["power"]
        print(f'The {monster["name"]} attacks back! You have {playerHealth} HP left!')

        if playerHealth <= 0:
            print(f'The {monster["name"]} killed you!')
            break
    
    return playerHealth  # Returns updated player health after the fight

def equipItems(itemInventory, equippiedItems):
    """
    Allows the player to equip items from the inventory.

    Parameters:
        itemInventory (list): The list of items available for equipping.
        equippedItems (list): The list of items the player has currently equipped.

    Returns:
        None
    """
    print("\nAvailable items to equip:")
    for index, item in enumerate(itemInventory):
        print(f"{index + 1}: {item['name']} (Type: {item['type']})")
        
    while True:
        choice = input('Enter the number of the item you would like to equip or type "done" to exit: ')
    
        if choice.lower() == 'done':
            break
        
        if choice.isdigit():
            choice_index = int(choice) - 1
            
            if 0 <= choice_index < len(itemInventory):
                item = itemInventory[choice_index]
                if item['type'] == 'healthBoost':
                    equippiedItems.append(item['name'])
                    print(f"You equipped {item['name']} for health boost!")
                elif item['type'] in ['weapon', 'shield']:
                    if item['currentDurability'] >= item['minDurability']:
                        equippiedItems.append(item['name'])
                        print(f"You equipped {item['name']}!")
                    else:
                        print(f"Cannot equip {item['name']}: durability too low.")
            else:
                print("Invalid choice, please try again.")
        else:
            print("Please enter a valid number or 'done'.")

if __name__ == '__main__':
    main()